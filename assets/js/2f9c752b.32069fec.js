"use strict";(self.webpackChunk_drayman_docs=self.webpackChunk_drayman_docs||[]).push([[933],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return h}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=u(t),h=o,b=m["".concat(s,".").concat(h)]||m[h]||l[h]||i;return t?r.createElement(b,a(a({ref:n},p),{},{components:t})):r.createElement(b,a({ref:n},p))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8322:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],c={title:"The EventHub object",sidebar_position:5},s=void 0,u={unversionedId:"components-in-depth/helpers/the-event-hub-object",id:"components-in-depth/helpers/the-event-hub-object",isDocsHomePage:!1,title:"The EventHub object",description:"The EventHub object can be used to create a real-time communication between components.",source:"@site/docs/components-in-depth/helpers/the-event-hub-object.mdx",sourceDirName:"components-in-depth/helpers",slug:"/components-in-depth/helpers/the-event-hub-object",permalink:"/docs/components-in-depth/helpers/the-event-hub-object",editUrl:"https://github.com/Claviz/drayman/blob/main/docs/docs/components-in-depth/helpers/the-event-hub-object.mdx",version:"current",sidebarPosition:5,frontMatter:{title:"The EventHub object",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"The Browser object",permalink:"/docs/components-in-depth/helpers/the-browser-object"}},p=[{value:"Building a component with real-time communication",id:"building-a-component-with-real-time-communication",children:[]}],l={toc:p};function m(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The EventHub object can be used to create a real-time communication between components."),(0,i.kt)("h2",{id:"building-a-component-with-real-time-communication"},"Building a component with real-time communication"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/components/home.tsx"',title:'"src/components/home.tsx"'},'export const component: DraymanComponent = async ({\n  forceUpdate,\n  //highlight-next-line\n  EventHub,\n}) => {\n  let messages = [];\n  let message: string;\n\n  //highlight-start\n  EventHub.on("message", async ({ text }) => {\n    messages.push(text);\n    await forceUpdate();\n  });\n  //highlight-end\n\n  return () => {\n    return (\n      <>\n        <input\n          value={message}\n          oninput={async ({ value }) => {\n            message = value;\n            await forceUpdate();\n          }}\n        />\n        <button\n          onclick={async () => {\n            //highlight-start\n            await EventHub.emit("message", {\n              text: `${new Date().toISOString()}: ${message}`,\n            });\n            //highlight-end\n            message = null;\n            await forceUpdate();\n          }}\n          disabled={!message}\n        >\n          Send message\n        </button>\n        <ul>\n          {messages.map((x) => (\n            <li>{x}</li>\n          ))}\n        </ul>\n      </>\n    );\n  };\n};\n')))}m.isMDXComponent=!0}}]);