"use strict";(self.webpackChunk_drayman_docs=self.webpackChunk_drayman_docs||[]).push([[8755],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var o=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=o.createContext({}),p=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=p(e.components);return o.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(t),d=a,b=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return t?o.createElement(b,r(r({ref:n},c),{},{components:t})):o.createElement(b,r({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,r[1]=s;for(var p=2;p<i;p++)r[p]=t[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2782:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var o=t(7462),a=t(3366),i=(t(7294),t(3905)),r=["components"],s={title:"Using Web Components",sidebar_position:1},l=void 0,p={unversionedId:"web-components/using-web-components",id:"web-components/using-web-components",isDocsHomePage:!1,title:"Using Web Components",description:"All Drayman components (usually defined at src/components/ folder) are rendered server-side.",source:"@site/docs/web-components/using-web-components.mdx",sourceDirName:"web-components",slug:"/web-components/using-web-components",permalink:"/docs/web-components/using-web-components",editUrl:"https://github.com/Claviz/drayman/blob/main/docs/docs/web-components/using-web-components.mdx",version:"current",sidebarPosition:1,frontMatter:{title:"Using Web Components",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"The Server object",permalink:"/docs/components-in-depth/helpers/the-server-object"},next:{title:"@drayman/elements",permalink:"/docs/web-components/drayman-elements"}},c=[{value:"Creating a Web Component",id:"creating-a-web-component",children:[{value:"Passing options to Web Component",id:"passing-options-to-web-component",children:[]},{value:"Handling Web Component events",id:"handling-web-component-events",children:[]}]},{value:"Publishing a Web Component",id:"publishing-a-web-component",children:[]},{value:"Installing third-party Web Component package",id:"installing-third-party-web-component-package",children:[]}],m={toc:c};function u(e){var n=e.components,s=(0,a.Z)(e,r);return(0,i.kt)("wrapper",(0,o.Z)({},m,s,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"All Drayman components (usually defined at ",(0,i.kt)("inlineCode",{parentName:"p"},"src/components/")," folder) are rendered server-side.\nThey are built by combining HTML elements and other Drayman components, but sometimes it is difficult to build or reuse UI layout or interactivity which is usually done in the browser.\nIn this case ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Web_Components"},"Web Components")," can be used inside a Drayman components."),(0,i.kt)("p",null,"Web components can be built using vanilla JS or any other Web Component framework/library.\nFor example, official collection of Web Components for Drayman called ",(0,i.kt)("a",{parentName:"p",href:"./drayman-elements"},"@drayman/elements")," was built using ",(0,i.kt)("a",{parentName:"p",href:"https://angular.io/guide/elements"},"Angular Elements"),"."),(0,i.kt)("h2",{id:"creating-a-web-component"},"Creating a Web Component"),(0,i.kt)("p",null,"Let's start with creating a file called ",(0,i.kt)("inlineCode",{parentName:"p"},"amazing-button.js")," and putting it inside a ",(0,i.kt)("inlineCode",{parentName:"p"},"public")," folder:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="public/amazing-button.js"',title:'"public/amazing-button.js"'},'class AmazingButton extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    this.style.backgroundColor = "#daad86";\n    this.style.height = "50px";\n    this.style.cursor = "pointer";\n    this.style.padding = "5px 10px";\n    this.style.borderRadius = "5px";\n    this.innerHTML = "Button";\n  }\n}\ncustomElements.define("amazing-button", AmazingButton);\n')),(0,i.kt)("p",null,"This is a regular Web Component which displays a static button with some styles. The only difference is that Drayman requires to define component's logic inside a ",(0,i.kt)("inlineCode",{parentName:"p"},"connectedCallback")," method."),(0,i.kt)("p",null,"Don't forget to reference it inside a ",(0,i.kt)("inlineCode",{parentName:"p"},"index.html")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="index.html"',title:'"index.html"'},'<head>\n  <script src="amazing-button.js"><\/script>\n</head>\n')),(0,i.kt)("p",null,"Finally, use it inside a Drayman component:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/components/home.tsx"',title:'"src/components/home.tsx"'},"export const component: DraymanComponent = async ({ forceUpdate }) => {\n  return () => {\n    return <amazing-button />;\n  };\n};\n")),(0,i.kt)("p",null,"In result, you will see something like this:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Web Component button",src:t(3620).Z})),(0,i.kt)("h3",{id:"passing-options-to-web-component"},"Passing options to Web Component"),(0,i.kt)("p",null,"Options can be passed to Web Components like any other options/attributes in Drayman Framework:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/components/home.tsx"',title:'"src/components/home.tsx"'},'export const component: DraymanComponent = async ({ forceUpdate }) => {\n  return () => {\n    // highlight-next-line\n    return <amazing-button label="Click me!" color="#5cdb95" />;\n  };\n};\n')),(0,i.kt)("p",null,"To make it work inside a Web Component, reference ",(0,i.kt)("inlineCode",{parentName:"p"},"this")," object with required option:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="public/amazing-button.js"',title:'"public/amazing-button.js"'},'class AmazingButton extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    // highlight-next-line\n    this.style.backgroundColor = this.color || "#daad86";\n    this.style.height = "50px";\n    this.style.cursor = "pointer";\n    this.style.padding = "5px 10px";\n    this.style.borderRadius = "5px";\n    // highlight-next-line\n    this.innerHTML = this.label || "Button";\n  }\n}\ncustomElements.define("amazing-button", AmazingButton);\n')),(0,i.kt)("p",null,"In result, button now has a label and custom color:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Web Component button",src:t(2977).Z})),(0,i.kt)("h3",{id:"handling-web-component-events"},"Handling Web Component events"),(0,i.kt)("p",null,"Web Components events can be handled like any other ",(0,i.kt)("a",{parentName:"p",href:"./handling-events"},"events in Drayman"),".\nThe only difference is that events must be named with ",(0,i.kt)("inlineCode",{parentName:"p"},"on")," prefix and be in camel case. For example, let's add an ",(0,i.kt)("inlineCode",{parentName:"p"},"onClick")," event to our button:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="public/amazing-button.js"',title:'"public/amazing-button.js"'},'class AmazingButton extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    this.style.backgroundColor = this.color || "#daad86";\n    this.style.height = "50px";\n    this.style.cursor = "pointer";\n    this.style.padding = "5px 10px";\n    this.style.borderRadius = "5px";\n    this.innerHTML = this.label || "Button";\n    // highlight-next-line\n    this.onclick = this.onClick;\n  }\n}\ncustomElements.define("amazing-button", AmazingButton);\n')),(0,i.kt)("p",null,"In the example above, we tell our button to handle Drayman ",(0,i.kt)("inlineCode",{parentName:"p"},"onClick")," event when HTML element ",(0,i.kt)("inlineCode",{parentName:"p"},"onclick")," event is triggered by overriding it."),(0,i.kt)("p",null,"Finally, we can handle this event inside a Drayman component:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/components/home.tsx"',title:'"src/components/home.tsx"'},'export const component: DraymanComponent = async ({ forceUpdate }) => {\n  return () => {\n    return (\n      <amazing-button\n        label="Click me!"\n        color="#5cdb95"\n        // highlight-next-line\n        onClick={async () => {\n          // highlight-next-line\n          console.log("Button was clicked!");\n          // highlight-next-line\n        }}\n      />\n    );\n  };\n};\n')),(0,i.kt)("p",null,"In result, every time our button is clicked, we will see a message in the server-side console:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Web Component button",src:t(3661).Z})),(0,i.kt)("h2",{id:"publishing-a-web-component"},"Publishing a Web Component"),(0,i.kt)("p",null,"Any Web Component can be published to NPM so it can be used in other projects or by other developers."),(0,i.kt)("p",null,"To do so, create a new folder with two files - ",(0,i.kt)("inlineCode",{parentName:"p"},"amazing-button.js")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"packages.json"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="amazing-button.js"',title:'"amazing-button.js"'},'class AmazingButton extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    this.style.backgroundColor = this.color || "#daad86";\n    this.style.height = "50px";\n    this.style.cursor = "pointer";\n    this.style.padding = "5px 10px";\n    this.style.borderRadius = "5px";\n    this.innerHTML = this.label || "Button";\n    this.onclick = this.onClick;\n  }\n}\ncustomElements.define("amazing-button", AmazingButton);\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  "name": "drayman-amazing-button",\n  "version": "1.0.0",\n  "description": "Demo Web Component for Drayman Framework",\n  "license": "MIT",\n  "keywords": ["drayman"],\n  "drayman": {\n    "elements": {\n      "amazing-button": {\n        "script": "./amazing-button.js"\n      }\n    }\n  }\n}\n')),(0,i.kt)("p",null,"Pay attention on how element is defined inside a ",(0,i.kt)("inlineCode",{parentName:"p"},"project.json")," file.\nIt is important to define ",(0,i.kt)("inlineCode",{parentName:"p"},"drayman.elements")," object where all paths of Web Components are defined.\nThis way when a package is installed inside a Drayman project, you don't need to reference it in any way - Drayman will automatically do it for you."),(0,i.kt)("p",null,"Finally, publish your Web Component package to NPM:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"npm publish\n")),(0,i.kt)("h2",{id:"installing-third-party-web-component-package"},"Installing third-party Web Component package"),(0,i.kt)("p",null,"If all requirements from previous steps are met, installing third-party Web Component package into your project is as simple as:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"npm install drayman-amazing-button\n")),(0,i.kt)("p",null,"Drayman will automatically find installed Web Components and add them to your project."))}u.isMDXComponent=!0},3661:function(e,n,t){n.Z=t.p+"assets/images/web-component-button-events-2061f9c54fb1d783f380b5c816f445b0.gif"},2977:function(e,n,t){n.Z=t.p+"assets/images/web-component-button-options-f826f871f4f5b70b52ffbefe70b596ec.png"},3620:function(e,n,t){n.Z=t.p+"assets/images/web-component-button-328b75c868441328247a4a2f5c8d607a.png"}}]);